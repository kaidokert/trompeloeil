language: cpp
dist: xenial

env:
 - CN_CXX=libstdc++11

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-8
          packages:
            - g++-6
            - clang-8
            - libc++-8-dev
            - libc++abi-8-dev
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
      env:
        - COMPILER="clang++-8" SANITIZE=false CXXFLAGS="-stdlib=libc++" CXX_STANDARD="17" CONAN_COMPILER=clang CN_VERSION=8

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
      env:
        - COMPILER="g++-4.9" SANITIZE=true CONAN_COMPILER=gcc CN_VERSION=4.9


    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
      env:
        - COMPILER="g++-9" SANITIZE=true  CXX_STANDARD="20" CONAN_COMPILER=gcc CN_VERSION=9.2

    - os: osx
      osx_image: xcode11
      compiler: clang
      env:
        - PATH="~/Library/Python/2.7/bin:$PATH"
        - COMPILER="clang++" SANITIZE=false CONAN_COMPILER=apple-clang CN_VERSION=11.0 CN_CXX=libc++

    - os: osx
      osx_image: xcode7.3
      compiler: clang
      env:
        - PATH="~/Library/Python/2.7/bin:$PATH"
        - COMPILER="clang++" SANITIZE=false CONAN_COMPILER=apple-clang CN_VERSION=7.3 CN_CXX=libc++

install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      which cmake || brew install cmake
    fi
  - |
    if [[ ! -z "${CONAN_COMPILER}" ]]; then
      pip -v install --user conan
      # pip3 -v install --user conan || true
      # python3 -m pip freeze || true
    fi

before_script:
  - CXX=${COMPILER} CXXFLAGS=${CXXFLAGS} ./check_errors.sh ||
    {
      FAILURES="$?" ;
      if [[ ${CXX_STANDARD} == "11" ]]; then
        if [[ ${FAILURES} != "4" ]]; then
          echo "Expected four failures from C++11 check_errors.sh, got ${FAILURES}" ;
          exit 1 ;
        fi ;
      else
        echo "Expected zero failures from check_errors.sh, got ${FAILURES}" ;
        exit 1 ;
      fi ;
    }
  - conan --version || true
  - echo find ~/ -name conan || true
  - |
    if [[ ! -z "${CONAN_COMPILER}" ]]; then
      export CN_CXX=${CN_CXX:-libstdc++11}
      conan create \
        -e CXX=${COMPILER} \
        -s compiler=${CONAN_COMPILER} \
        -s compiler.version=${CN_VERSION} \
        -s compiler.libcxx=${CN_CXX} \
        . testuser/testchannel
    fi
  - mkdir build && cd build
  - CXX=${COMPILER} cmake -DCXX_STANDARD="${CXX_STANDARD}" -DCMAKE_BUILD_TYPE=Debug -DTRAVIS_JOB_ID='${TRAVIS_JOB_ID}' -DSANITIZE=${SANITIZE} ..
  - make VERBOSE=1 self_test

script:
  make run_self_test

after_success:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      make VERBOSE=1 run_coverage
    fi
