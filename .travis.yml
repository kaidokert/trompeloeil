language: cpp
dist: xenial

env:
  global:
    - PYENV_VERSION=3.7
    - PATH=$PATH:~/Library/Python/3.7/bin HOMEBREW_NO_INSTALL_CLEANUP=1

matrix:
  include:
    # PLACEHOLDER

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-8
          packages:
            - g++-6
            - clang-8
            - libc++-8-dev
            - libc++abi-8-dev
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
      env:
        - COMPILER="clang++-8" SANITIZE=false CXXFLAGS="-stdlib=libc++" CXX_STANDARD="17" CONAN_COMPILER=clang CC_VERSION=8

    # PLACEHOLDER

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
      env:
        - COMPILER="g++-9" SANITIZE=true CONAN_COMPILER=gcc CC_VERSION=9.2

    # PLACEHOLDER

    - os: osx
      osx_image: xcode11
      compiler: clang
      env:
        - COMPILER="clang++" SANITIZE=false CONAN_COMPILER=apple-clang CC_VERSION=11.0 CC_LIBCXX=libc++

    # PLACEHOLDER

    - os: osx
      osx_image: xcode9
      compiler: clang
      env:
        - COMPILER="clang++" SANITIZE=false CONAN_COMPILER=apple-clang CC_VERSION=9.0 CC_LIBCXX=libc++

    # PLACEHOLDER

    - os: osx
      osx_image: xcode7.3
      compiler: clang
      env:
        - COMPILER="clang++" SANITIZE=false CONAN_COMPILER=apple-clang CC_VERSION=7.3 CC_LIBCXX=libc++

install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      which cmake || brew install cmake
      which pip3 || brew upgrade python@3 || brew upgrade python@3 || true
    fi
  - |
    if [[ ! -z "${CONAN_COMPILER}" ]]; then
      pip3 -v install --user conan
    fi

before_script:
  - CXX=${COMPILER} CXXFLAGS=${CXXFLAGS} ./check_errors.sh ||
    {
      FAILURES="$?" ;
      if [[ ${CXX_STANDARD} == "11" ]]; then
        if [[ ${FAILURES} != "4" ]]; then
          echo "Expected four failures from C++11 check_errors.sh, got ${FAILURES}" ;
          exit 1 ;
        fi ;
      else
        echo "Expected zero failures from check_errors.sh, got ${FAILURES}" ;
        exit 1 ;
      fi ;
    }
  - |
    if [[ ! -z "${CONAN_COMPILER}" ]]; then
      conan --version
      export CC_LIBCXX=${CC_LIBCXX:-libstdc++11} # Default to GCC
      conan create \
        -e CXX=${COMPILER} \
        -s compiler=${CONAN_COMPILER} \
        -s compiler.version=${CC_VERSION} \
        -s compiler.libcxx=${CC_LIBCXX} \
        . testuser/testchannel
    fi
  - mkdir build && cd build
  - CXX=${COMPILER} cmake -DCXX_STANDARD="${CXX_STANDARD}" -DCMAKE_BUILD_TYPE=Debug -DTRAVIS_JOB_ID='${TRAVIS_JOB_ID}' -DSANITIZE=${SANITIZE} ..
  - make VERBOSE=1 self_test

script:
  make run_self_test

after_success:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      make VERBOSE=1 run_coverage
    fi
